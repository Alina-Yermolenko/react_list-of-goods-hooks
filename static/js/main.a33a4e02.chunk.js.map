{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isReverse","setIsReverse","sortType","setSortType","visibleGoods","sortedGoods","sort","a","b","localeCompare","length","reverse","setSortedGoods","className","type","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"+NAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAwCMC,EArBiB,WACrB,IAAMC,EAAW,UAAOR,GAiBxB,OAfAQ,EAAYC,MAAK,SAACC,EAAGC,GACnB,OAAQN,GACN,IAAK,WACH,OAAOK,EAAEE,cAAcD,GACzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAITV,GACFK,EAAYM,UAGPN,EAGYO,GAErB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,aAAbX,EAA0B,WAAa,IACpEa,QAAS,WA7CfZ,EAAY,aA0CR,iCAUA,wBACEW,KAAK,SACLD,UAAS,4BAAoC,WAAbX,EAAwB,WAAa,IACrEa,QAAS,WAnDfZ,EAAY,WAgDR,4BAUA,wBACEW,KAAK,SACLD,UAAS,4BAAwBb,EAAyB,GAAb,YAC7Ce,QAAS,WAzDfd,GAAcD,IAsDV,qBAUEgB,KAAKC,UAAUb,KAAkBY,KAAKC,UAAUpB,GAE5C,wBACEiB,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,OAlEdd,GAAa,QACbE,EAAY,SA6DF,mBASE,2BAIV,6BACE,6BAEIC,EAAac,KAAI,SAACC,GAChB,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cC/GzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a33a4e02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortType, setSortType] = useState('NONE');\n\n  const alphabet = () => {\n    setSortType('ALPHABET');\n  };\n\n  const length = () => {\n    setSortType('LENGTH');\n  };\n\n  const reverse = () => {\n    setIsReverse(!isReverse);\n  };\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortType('NONE');\n  };\n\n  const setSortedGoods = () => {\n    const sortedGoods = [...goodsFromServer];\n\n    sortedGoods.sort((a, b) => {\n      switch (sortType) {\n        case 'ALPHABET':\n          return a.localeCompare(b);\n        case 'LENGTH':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReverse) {\n      sortedGoods.reverse();\n    }\n\n    return sortedGoods;\n  };\n\n  const visibleGoods = setSortedGoods();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== 'ALPHABET' ? 'is-light' : ''}`}\n          onClick={() => {\n            return alphabet();\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== 'LENGTH' ? 'is-light' : ''}`}\n          onClick={() => {\n            return length();\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReverse ? 'is-light' : ''}`}\n          onClick={() => {\n            return reverse();\n          }}\n        >\n          Reverse\n        </button>\n        {\n          JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => {\n                  return reset();\n                }}\n              >\n                Reset\n              </button>\n            ) : <div />\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {\n            visibleGoods.map((good) => {\n              return (\n                <li key={good} data-cy=\"Good\">{good}</li>\n              );\n            })\n          }\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}